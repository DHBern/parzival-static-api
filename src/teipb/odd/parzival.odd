<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>parzival</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl/>
        </encodingDesc>
        <revisionDesc>
            <change when="2023-05-09Z">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="parzival" source="teipublisher.odd"> <elementSpec ident="lem" mode="add"/>
                <elementSpec ident="l" mode="change"/>
                <elementSpec ident="seg" mode="change">
                    <model predicate="@subtype='nicht_ausgeführt'" behaviour="inline" cssClass="not-executed"/>
                    <model predicate="@type='Versumstellung'" behaviour="inline" cssClass="verse-change"/>
                    <model predicate="@type='kleine_Variante'" behaviour="inline" cssClass="small-variant">
            <desc>no special styles</desc>
        </model>
                    <model predicate="@type='singuläre_Lesart'" behaviour="inline" cssClass="singular-reading">
            <desc>no special styles</desc>
        </model>
                    <model predicate="@type='große_Variante'" behaviour="inline" cssClass="large-variant"/>
                    <model predicate="@subtype='Großinitiale'" behaviour="inline" cssClass="capital-initial"/>
                    <model predicate="@subtype='Majuskel'" behaviour="inline" cssClass="majuscule"/>
                    <model predicate="@subtype='Prachtinitiale'" behaviour="inline" cssClass="glory-initial">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                    <model predicate="@type='Initiale'" behaviour="inline" cssClass="initial" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="name" mode="add">
                    <model behaviour="inline">
            <param name="default" value="."/>
            <param name="ref" value="@ref"/>
            <pb:template xmlns="" xml:space="preserve"><span data-ref="[[ref]]">[[default]]</span></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="reg" mode="add">
                    <model predicate="@type='Synkope'" behaviour="inline" cssClass="syncope">
            <param name="type" value="Synkope"/>
        </model>
                </elementSpec>
                <elementSpec ident="milestone" mode="add">
                    <model predicate="@unit='Versumstellung'" behaviour="inline" cssClass="versechange"/>
                </elementSpec>
                <elementSpec ident="subst" mode="add">
                    <model predicate="@hand[starts-with(., '#ls')]" behaviour="inline" cssClass="subst_ls"/>
                    <model predicate="@hand[starts-with(., '#sr')]" behaviour="inline" cssClass="subst_sr"/>
                    <model behaviour="inline" cssClass="subst"/>
                </elementSpec>
                <elementSpec ident="add" mode="change">
                    <model predicate="@hand=&#34;#sr&#34;" behaviour="inline" cssClass="sr"/>
                    <model behaviour="inline" cssClass="added"/>
                </elementSpec>
                <elementSpec ident="del" mode="change">
                    <model predicate="@hand='#sr'" behaviour="inline" cssClass="del_sr"/>
                    <model behaviour="inline" cssClass="deleted"/>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model predicate="@resp" behaviour="omit"/>
                    <model predicate="@type='Notiz'" behaviour="inline" cssClass="note"/>
                    <model predicate="@type='Marginalie'" behaviour="inline" cssClass="marginalia"/>
                    <model predicate="not(@type='Kapitelüberschrift')" behaviour="inline" cssClass="note"/>
                </elementSpec>
                <elementSpec ident="hi" mode="change">
                    <model predicate="@rend='rot'" behaviour="inline" cssClass="red"/>
                    <model predicate="@rend='unterstrichen'" behaviour="inline" cssClass="underline"/>
                    <model predicate="@rend='rasur'" behaviour="inline" cssClass="rasure"/>
                </elementSpec>
                <elementSpec ident="choice" mode="change">
                    <model predicate="am and ex" behaviour="inline">
            <param name="default" value="ex[1]"/>
            <param name="alternate" value="am[1]"/>
            <pb:template xmlns="" xml:space="preserve">([[default]])</pb:template>
        </model>
                    <model predicate="sic and corr" behaviour="alternate">
            <param name="default" value="corr[1]"/>
            <param name="alternate" value="sic[1]"/>
        </model>
                    <model predicate="abbr and expan" behaviour="alternate">
            <param name="default" value="expan[1]"/>
            <param name="alternate" value="abbr[1]"/>
        </model>
                    <model predicate="orig and reg" behaviour="alternate">
            <param name="default" value="reg[1]"/>
            <param name="alternate" value="orig[1]"/>
        </model>
                </elementSpec>
                <elementSpec ident="lb" mode="change">
                    <model behaviour="inline" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
            <pb:template xmlns="" xml:space="preserve">|</pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="gap" mode="change">
                    <model predicate="number(@extent)=1" behaviour="inline" cssClass="gap">
            <pb:template xmlns="" xml:space="preserve">:</pb:template>
        </model>
                    <model predicate="number(@extent)=2" behaviour="inline" cssClass="gap">
            <pb:template xmlns="" xml:space="preserve">::</pb:template>
        </model>
                    <model predicate="@reason=&#34;Fragmentverlust&#34; or @extent=&#34;unbekannt&#34; or number(@extent)&gt;=3" behaviour="inline" cssClass="gap">
            <pb:template xmlns="" xml:space="preserve">:::</pb:template>
        </model>
                    <model behaviour="inline" cssClass="gap">
            <pb:template xmlns="" xml:space="preserve">-*-</pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="corr" mode="change">
                    <model predicate="parent::choice and count(parent::*/*) gt 1" behaviour="inline">
            <desc>simple inline, if in parent choice. </desc>
        </model>
                    <model behaviour="inline" cssClass="corr"/>
                </elementSpec>
            <elementSpec ident="unclear" mode="change"/>
            <elementSpec ident="pb" mode="change">
                    <model behaviour="omit"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>